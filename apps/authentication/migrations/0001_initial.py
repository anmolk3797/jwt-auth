# Generated by Django 3.1.4 on 2020-12-19 11:24

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('username', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('email', models.EmailField(max_length=254, null=True, verbose_name='Email')),
                ('first_name', models.CharField(max_length=30, null=True, verbose_name='First name')),
                ('last_name', models.CharField(blank=True, max_length=30, null=True, verbose_name='Last name')),
                ('address', models.CharField(blank=True, max_length=254, null=True, verbose_name='Address')),
                ('phone', models.CharField(blank=True, max_length=30, null=True, verbose_name='Cell phone')),
                ('dob', models.DateField(blank=True, null=True)),
                ('gender', models.CharField(blank=True, max_length=10, null=True)),
                ('profile_picture', models.ImageField(blank=True, max_length=255, null=True, upload_to='profile_pictures/%Y/%m/%d/')),
                ('otp', models.CharField(blank=True, max_length=4, null=True, verbose_name='otp')),
                ('role', models.CharField(choices=[('superuser', 'Superuser'), ('club_owner', 'Club Owner'), ('club_manager', 'Club Manager'), ('club_member', 'Club Member'), ('club_follower', 'Club Follower')], max_length=100, null=True, verbose_name='Role')),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified At')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether this user should be treated as staff. ', verbose_name='staff')),
                ('is_active', models.BooleanField(default=False, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='UserPermissions',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True, verbose_name='Created At')),
                ('modified_at', models.DateTimeField(auto_now=True, db_index=True, verbose_name='Modified At')),
                ('user_view', models.BooleanField(default=False, help_text='Designates whether this user should be create,update,delete user. ')),
                ('user_edit', models.BooleanField(default=False, help_text='Designates whether this user should be create,update,delete user. ')),
                ('user_delete', models.BooleanField(default=False, help_text='Designates whether this user should be create,update,delete customer. ')),
                ('administer_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_administer', to=settings.AUTH_USER_MODEL)),
                ('supervisor_user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='user_permission_by_administer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
